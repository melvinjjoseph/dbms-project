import streamlit as st
from database import *
from bill import *

def advancedFeatures():
    FeaturesMenu=['Find Amount Generated by each State','Find amount generated by each board','Find Bills past Due Date','Find Customer with more than average units consumed of their city','Find Customer with highest bill amount','Find Average Units Consumed for each city']
    choice=st.selectbox("Menu",FeaturesMenu)
    if choice=="Find Amount Generated by each State":
        mycursor.execute("SELECT state, SUM(amount) FROM bill INNER JOIN customer ON bill.cust_id = customer.cust_id GROUP BY state")
        myresult = mycursor.fetchall()
        df=pd.DataFrame(myresult,columns=['state','amount'])
        st.dataframe(df)

    if choice=="Find Bills past Due Date":
        due_bills()

    if choice=="Find amount generated by each board":
        mycursor.execute("SELECT eb.eb_id, eb.name, SUM(b.amount) AS total_bill_amount FROM board eb JOIN bill b ON eb.eb_id = b.board_id GROUP BY eb.eb_id, eb.name;")
        myresult = mycursor.fetchall()
        df=pd.DataFrame(myresult,columns=['board_id','board_name','total_bill_amount'])
        st.dataframe(df)


    if choice=="Find Customer with more than average units consumed of their city":
        #create a correlated subquery
        mycursor.execute("SELECT c.cust_id, c.name, c.address, c.city, c.state, b.units FROM customer c JOIN bill b on c.cust_id = b.cust_id WHERE b.units > (SELECT AVG(b2.units) FROM bill b2 JOIN customer c2 on b2.cust_id = c2.cust_id WHERE c2.city = c.city)")
        myresult = mycursor.fetchall()
        df=pd.DataFrame(myresult,columns=['cust_id','name','address','city','state','units'])
        st.dataframe(df)


    if choice=="Find Customer with highest bill amount":
        #use nested query
        mycursor.execute("SELECT cust_id, name, address, city, state FROM customer WHERE cust_id = (SELECT cust_id FROM bill WHERE amount = (SELECT MAX(amount) FROM bill))")
        myresult = mycursor.fetchall()
        mycursor.execute("SELECT MAX(amount) FROM bill")
        myresult1 = mycursor.fetchall()
        st.write("Customer with highest bill amount of ",myresult1[0][0])
        df=pd.DataFrame(myresult,columns=['cust_id','name','address','city','state'])
        st.dataframe(df)

    
    if choice=="Find Average Units Consumed for each city":
        #create a function for this
        mycursor.execute("CREATE FUNCTION IF NOT EXISTS avg_units(city VARCHAR(255)) RETURNS INT DETERMINISTIC RETURN (SELECT AVG(units) FROM bill INNER JOIN customer ON bill.cust_id = customer.cust_id WHERE customer.city = city) ")
        city=st.text_input("Enter city")
        mycursor.execute("SELECT avg_units(%s)",(city,))
        myresult = mycursor.fetchall()
        df=pd.DataFrame(myresult,columns=['avg_units'])
        st.write("Average units consumed in ",city)
        st.dataframe(df)




    